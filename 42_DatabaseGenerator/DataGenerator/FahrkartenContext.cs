// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace DataGenerator
{
    public class Kartenart
    {
        public int KartenartId { get; set; }
        public string Name { get; set; }
        public int? TageGueltig { get; set; }
        public decimal? Preis { get; set; }
        public List<Verkauf> Verkaeufe { get; set; }
    }

    public class Station
    {
        public int StationId { get; set; }
        public string Name { get; set; }
        public decimal Latitude { get; set; }
        public decimal Longitude { get; set; }
        public List<Verkauf> Verkaeufe { get; set; }
    }

    public partial class Verkauf
    {
        public int VerkaufId { get; set; }
        public DateTime Datum { get; set; }
        public int Menge { get; set; }
        public int KartenartId { get; set; }
        public Kartenart Kartenart { get; set; }
        public int StationId { get; set; }
        public Station Station { get; set; }
    }

    public partial class FahrkartenContext : DbContext
    {
        public FahrkartenContext()
        {
        }

        public FahrkartenContext(DbContextOptions<FahrkartenContext> options)
            : base(options)
        {
        }
        public FahrkartenContext(string connection) : this(
            new DbContextOptionsBuilder<FahrkartenContext>()
                .UseSqlServer(connection)
                .Options)
        { }

        public virtual DbSet<Kartenart> Kartenarten { get; set; }
        public virtual DbSet<Station> Stationen { get; set; }
        public virtual DbSet<Verkauf> Verkaeufe { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Kartenart>().ToTable("Kartenart");
            modelBuilder.Entity<Kartenart>().Property(k => k.KartenartId).ValueGeneratedNever();
            modelBuilder.Entity<Kartenart>().Property(k => k.Name).HasMaxLength(200);
            modelBuilder.Entity<Kartenart>().Property(k => k.Preis).HasColumnType("DECIMAL(18,4)");

            modelBuilder.Entity<Station>().ToTable("Station");
            modelBuilder.Entity<Station>().Property(s => s.StationId).ValueGeneratedNever();
            modelBuilder.Entity<Station>().Property(s => s.Name).HasMaxLength(200);
            modelBuilder.Entity<Station>().Property(s => s.Latitude).HasColumnType("DECIMAL(18,15)");
            modelBuilder.Entity<Station>().Property(s => s.Longitude).HasColumnType("DECIMAL(18,15)");

            modelBuilder.Entity<Verkauf>().ToTable("Verkauf");
            modelBuilder.Entity<Verkauf>().Property(v => v.VerkaufId).ValueGeneratedNever();

        }
    }
}