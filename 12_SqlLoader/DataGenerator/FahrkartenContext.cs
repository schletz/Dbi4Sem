// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace DataGenerator
{
    [Table("Kartenart")]
    public class Kartenart
    {
        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column("Kartenart_Id")]
        public int KartenartId { get; set; }
        [Required]
        [StringLength(200)]
        public string Name { get; set; }
        public int? TageGueltig { get; set; }
        [Column(TypeName = "NUMBER(18,4)")]
        public decimal? Preis { get; set; }
        [InverseProperty("KartenartNavigation")]
        public virtual ICollection<Verkauf> Verkaufs { get; set; }
    }

    [Table("Station")]
    public class Station
    {
        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column("Station_Id")]
        public int StationId { get; set; }
        [Required]
        [StringLength(200)]
        public string Name { get; set; }
        [Column(TypeName = "NUMBER(18,15)")]
        public decimal Latitude { get; set; }
        [Column(TypeName = "NUMBER(18,15)")]
        public decimal Longitude { get; set; }

        [InverseProperty("StationNavigation")]
        public virtual ICollection<Verkauf> Verkaufs { get; set; }
    }

    [Table("Verkauf")]
    public partial class Verkauf
    {
        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.None)]
        [Column("Verkauf_Id")]
        public int VerkaufId { get; set; }
        public DateTime Datum { get; set; }
        [NotMapped]
        public int Wochentag { get; set; }
        [NotMapped]
        public int Stunde { get; set; }
        public int Station { get; set; }
        public int Kartenart { get; set; }

        [ForeignKey("Kartenart")]
        [InverseProperty("Verkaufs")]
        public virtual Kartenart KartenartNavigation { get; set; }
        [ForeignKey("Station")]
        [InverseProperty("Verkaufs")]
        public virtual Station StationNavigation { get; set; }
    }

    public partial class FahrkartenContext : DbContext
    {
        public FahrkartenContext()
        {
        }

        public FahrkartenContext(DbContextOptions<FahrkartenContext> options)
            : base(options)
        {
        }
        public FahrkartenContext(string connection) : this(
            new DbContextOptionsBuilder<FahrkartenContext>()
                .UseOracle(connection)
                .Options)
        { }

        public virtual DbSet<Kartenart> Kartenarts { get; set; }
        public virtual DbSet<Station> Stations { get; set; }
        public virtual DbSet<Verkauf> Verkaufs { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            // Für Oracle alle Namen großschreiben, sonst sind sie Case Sensitive und brauchen
            // ein " bei den Abfragen.
            if (Database.IsOracle())
            {
                foreach (var entity in modelBuilder.Model.GetEntityTypes())
                {
                    var schema = entity.GetSchema();
                    var tableName = entity.GetTableName();
                    var storeObjectIdentifier = StoreObjectIdentifier.Table(tableName, schema);
                    foreach (var property in entity.GetProperties())
                    {
                        property.SetColumnName(property.GetColumnName(storeObjectIdentifier).ToUpper());
                    }
                    entity.SetTableName(tableName.ToUpper());
                }
            }
        }
    }
}